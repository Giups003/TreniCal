syntax = "proto3";

package trenical.notification;

option java_multiple_files = true;
option java_package = "it.unical.trenical.grpc.notification";
option java_outer_classname = "NotificationServiceProto";

import "common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// Servizio per la gestione delle notifiche
service NotificationService {
  // Registra un cliente per ricevere aggiornamenti in tempo reale su un treno specifico
  rpc RegisterForTrainUpdates(RegisterForTrainRequest) returns (OperationResponse);
  
  // Annulla la registrazione per gli aggiornamenti di un treno
  rpc UnregisterFromTrainUpdates(UnregisterRequest) returns (OperationResponse);
  
  // Ottiene tutte le notifiche per un utente
  rpc GetNotifications(GetNotificationsRequest) returns (NotificationList);
  
  // Segna una notifica come letta
  rpc MarkNotificationAsRead(MarkNotificationRequest) returns (OperationResponse);
  
  // Ottiene lo stato attuale di un treno
  rpc GetTrainStatus(GetTrainStatusRequest) returns (TrainStatusResponse);
  
  // Aggiorna lo stato di un treno (solo per admin)
  rpc UpdateTrainStatus(UpdateTrainStatusRequest) returns (OperationResponse);
  
  // Invia notifiche promozionali ai clienti "FedeltàTreno" (solo per admin)
  rpc SendPromotionalNotifications(SendPromotionalRequest) returns (OperationResponse);

  // Ottiene la preferenza di ricezione promozioni per un utente
  rpc GetPromotionalPreference(PromotionalPreferenceRequest) returns (PromotionalPreferenceResponse);

  // Aggiorna la preferenza di ricezione promozioni per un utente
  rpc SetPromotionalPreference(SetPromotionalPreferenceRequest) returns (OperationResponse);
}

// Richiesta per registrarsi agli aggiornamenti di un treno
message RegisterForTrainRequest {
  string username = 1;
  int32 train_id = 2;
}

// Richiesta per annullare la registrazione agli aggiornamenti
message UnregisterRequest {
  string username = 1;
  int32 train_id = 2;
}

// Richiesta per ottenere le notifiche di un utente
message GetNotificationsRequest {
  string username = 1;
  bool include_read = 2; // Se true, include anche le notifiche già lette
}

// Richiesta per segnare una notifica come letta
message MarkNotificationRequest {
  string notification_id = 1;
}

// Richiesta per ottenere lo stato di un treno
message GetTrainStatusRequest {
  int32 train_id = 1;
  google.protobuf.Timestamp date = 2; // Data e orario della corsa
}

// Richiesta per aggiornare lo stato di un treno
message UpdateTrainStatusRequest {
  int32 train_id = 1;
  TrainStatus status = 2;
  string message = 3; // Messaggio opzionale (es. "Ritardo di 10 minuti")
  int32 platform_change = 4; // Nuovo binario (0 se non cambia)
  int32 delay_minutes = 5; // Minuti di ritardo
  google.protobuf.Timestamp date = 6; // Data e orario della corsa
}

// Richiesta per inviare notifiche promozionali
message SendPromotionalRequest {
  string title = 1;
  string message = 2;
  string promo_code = 3;
  google.protobuf.Timestamp expiry_date = 4;
}

// Richiesta per ottenere la preferenza promozioni
message PromotionalPreferenceRequest {
  string username = 1;
}

// Risposta con la preferenza promozioni
message PromotionalPreferenceResponse {
  bool wants_promotions = 1;
}

// Richiesta per aggiornare la preferenza promozioni
message SetPromotionalPreferenceRequest {
  string username = 1;
  bool wants_promotions = 2;
}

// Risposta generica per le operazioni
message OperationResponse {
  bool success = 1;
  string message = 2;
}

// Lista di notifiche
message NotificationList {
  repeated Notification notifications = 1;
}

// Modello di notifica
message Notification {
  string id = 1;
  string username = 2;
  string title = 3;
  string message = 4;
  google.protobuf.Timestamp timestamp = 5;
  NotificationType type = 6;
  bool read = 7;
  int32 train_id = 8; // ID del treno associato (se applicabile)
  string promo_code = 9; // Codice promozionale (se applicabile)
}

// Tipi di notifica
enum NotificationType {
  UNKNOWN = 0;
  TRAIN_STATUS = 1; // Aggiornamento stato treno
  TRAIN_DELAY = 2; // Ritardo
  TRAIN_CANCELLATION = 3; // Cancellazione
  PLATFORM_CHANGE = 4; // Cambio binario
  PROMOTION = 5; // Promozione
  GENERAL = 6; // Notifica generale
}

// Stato del treno
enum TrainStatus {
  UNKNOWN_STATUS = 0;
  ON_TIME = 1;
  DELAYED = 2;
  CANCELLED = 3;
  ARRIVED = 4;
  DEPARTED = 5;
}

// Risposta con lo stato del treno
message TrainStatusResponse {
  int32 train_id = 1;
  string train_name = 2;
  TrainStatus status = 3;
  int32 platform = 4;
  int32 delay_minutes = 5;
  string message = 6;
  google.protobuf.Timestamp last_update = 7;
}